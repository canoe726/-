#include<iostream>
#include<cstring>
#include<algorithm>

using namespace std;

int board[33][6] = {			// 33개 말판 인덱스, 0 : 현재 말판의 점수, 1~5 : 현재 말판에서 이동한 후 인덱스
	{0,1,2,3,4,5},				// 0번 인덱스
	{2,2,3,4,5,10},				// 1번 인덱스
	{4,3,4,5,10,11},			// 2번 인덱스
	{6,4,5,10,11,12},			// 3번 인덱스
	{8,5,10,11,12,13},			// 4번 인덱스
	{10,6,7,8,9,25},			// 5번 인덱스
	{13,7,8,9,25,26},			// 6번 인덱스
	{16,8,9,25,26,27},			// 7번 인덱스
	{19,9,25,26,27,32},			// 8번 인덱스
	{25,25,26,27,32,32},		// 9번 인덱스
	{12,11,12,13,14,17},		// 10번 인덱스
	{14,12,13,14,17,18},		// 11번 인덱스
	{16,13,14,17,18,19},		// 12번 인덱스
	{18,14,17,18,19,20},		// 13번 인덱스
	{20,15,16,9,25,26},			// 14번 인덱스
	{22,16,9,25,26,27},			// 15번 인덱스
	{24,9,25,26,27,32},			// 16번 인덱스
	{22,18,19,20,21,28},		// 17번 인덱스
	{24,19,20,21,28,29},		// 18번 인덱스
	{26,20,21,28,29,30},		// 19번 인덱스
	{28,21,28,29,30,31},		// 20번 인덱스
	{30,22,23,24,9,25},			// 21번 인덱스
	{28,23,24,9,25,26},			// 22번 인덱스
	{27,24,9,25,26,27},			// 23번 인덱스
	{26,9,25,26,27,32},			// 24번 인덱스
	{30,26,27,32,32,32},		// 25번 인덱스
	{35,27,32,32,32,32},		// 26번 인덱스
	{40,32,32,32,32,32},		// 27번 인덱스
	{32,29,30,31,32,32},		// 28번 인덱스
	{34,30,31,32,32,32},		// 29번 인덱스
	{36,31,32,32,32,32},		// 30번 인덱스
	{38,32,32,32,32,32},		// 31번 인덱스
	{0,32,32,32,32,32},			// 32번 인덱스
};


int dice[10];

int move_horse(int idx, int h1, int h2, int h3, int h4, int sum) {
	if (idx >= 10) {
		return sum;
	}
	
	int ret = 0;

	int move = dice[idx];

	int i;
	for (i = 0; i < 4; i++) {



	}

	// h1 말이 이동한 경우
	ret = max(ret, move_horse(idx + 1, h1 + move, h2, h3, h4, sum + board[h1 + move][0]));
	// h2 말이 이동한 경우
	ret = max(ret, move_horse(idx + 1, h1, h2 + move, h3, h4, sum + board[h2 + move][0]));
	// h3 말이 이동한 경우
	ret = max(ret, move_horse(idx + 1, h1, h2, h3 + move, h4, sum + board[h3 + move][0]));
	// h4 말이 이동한 경우
	ret = max(ret, move_horse(idx + 1, h1, h2, h3, h4 + move, sum + board[h4 + move][0]));

	return ret;
}

int main() {
	memset(dice, 0, sizeof(dice));

	int i;
	for (i = 0; i < 10; i++) {
		cin >> dice[i];
	}

	cout << move_horse(0, 0, 0, 0, 0, 0) << "\n";
}