7
10 20 10 30 20 50 40
a#include<iostream>
#include<algorithm>
#include<vector>
#include<cstring>
#include<string>
#include<queue>
#include<tuple>

using namespace std;

// LIS 최대값 저장
int d[1001];

// LIS 가 최대값이 갱신되도록 만드는 인덱스 값 저장
int v[1001];

int num[1001];

void find_answer(int idx) {
	// 더 이상 숫자를 찾을 수 없는 경우
	if (idx == -1) return;

	find_answer(v[idx]);
	cout << num[idx] << " ";
}

int main() {
	memset(d, 0, sizeof(d));
	memset(v, -1, sizeof(v));

	int N;
	cin >> N;

	int i, j;
	for (i = 0; i < N; i++) {
		cin >> num[i];
	}

	for (i = 0; i < N; i++) {
		// 자신은 항상 길이가 1 인 LIS
		d[i] = 1;

		for (j = i - 1; j >= 0; j--) {
			// 자신보다 앞에 있는데 작은 수면 오름차순이 된다.
			// 그 때 d[i] + 1 한 값이 LIS 길이이며 최대값으로 갱신한다.
			if (num[j] < num[i] && d[i] < d[j] + 1) {
				d[i] = d[j] + 1;
				v[i] = j;
			}
		}
	}

	int val = d[0];
	int idx = 0;
	for (i = 1; i < N; i++) {
		if (val < d[i]) {
			val = d[i];
			idx = i;
		}
	}

	cout << val << "\n";
	find_answer(idx);
	cout << "\n";
}