#include<iostream>
#include<string>
#include<algorithm>

#define ARRAY_SIZE 100

using namespace std;

int main()
{	
	int size = 100;

	int i, j, k;
	for (i = 0; i < 10; i++)
	{
		int num;
		cin >> num;

		int ladder[ARRAY_SIZE][ARRAY_SIZE] = { 0 };
		
		for (j = 0; j < size; j++)
		{
			for (k = 0; k < size; k++)
			{
				cin >> ladder[j][k];
			}
		}
				
		int count[ARRAY_SIZE] = { 0 };

		for (j = 0; j < size; j++)
		{
			if (ladder[0][j] == 1)
			{
				int visited[ARRAY_SIZE][ARRAY_SIZE] = { 0 };
				int y = 0, x = j;

				if (ladder[y + 1][x] == 1)
				{
					count[j]++;
					y++;

					while (y < size - 1)
					{
						count[j]++;
						// left
						if (x - 1 >= 0)
						{
							if (ladder[y][x - 1] == 1 && visited[y][x - 1] == 0)
							{
								visited[y][x] = 1;
								x--;
								continue;
							}
						}
						// right
						if (x + 1 < size)
						{
							if (ladder[y][x + 1] == 1 && visited[y][x + 1] == 0)
							{
								visited[y][x] = 1;
								x++;
								continue;
							}
						}
						
						// down
						if (y + 1 < size)
						{
							y++;
						}			
					}
					count[j]++;
				}
				else
				{
					continue;
				}
			}
			else
			{
				continue;
			}
		}

		int min_index, min_value = -1, zero = 0;
		for (j = 0; j < size; j++)
		{
			if (count[j] == 0)
			{
				continue;
			}
			else
			{
				if (min_value == -1)
				{
					min_value = count[j];
					min_index = j;
				}
				else
				{
					if (min_value >= count[j])
					{
						min_value = count[j];
						min_index = j;
					}
				}
			}
		}

		cout << "#" << i + 1 << " " << min_index << endl;
	}
}

/*
1
1 0 0 0 1 0 1 0 0 1
1 0 0 0 1 0 1 1 1 1
1 0 0 0 1 0 1 0 0 1
1 0 0 0 1 1 1 0 0 1
1 0 0 0 1 0 1 0 0 1
1 1 1 1 1 0 1 1 1 1
1 0 0 0 1 0 1 0 0 1
1 1 1 1 1 0 1 0 0 1
1 0 0 0 1 1 1 0 0 1
1 0 0 0 1 0 1 0 0 1

*/