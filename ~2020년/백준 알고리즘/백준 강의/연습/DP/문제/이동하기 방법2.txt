#include<iostream>
#include<algorithm>
#include<vector>
#include<cstring>
#include<string>
#include<queue>
#include<tuple>
#include<map>

using namespace std;

int maze[1001][1001];
// dp[i][j] = (1,1) 에서 (i,j) 로 이동할 때 가져올 수 있는 사탕의 최대 개수
int dp[1001][1001];

int main() {
	memset(maze, 0, sizeof(maze));
	memset(dp, 0, sizeof(dp));

	int N, M;
	cin >> N >> M;

	int i, j;
	for (i = 1; i <= N; i++) {
		for (j = 1; j <= M; j++) {
			cin >> maze[i][j];
		}
	}

	// 최댓값을 구하기 때문에 0 은 정답에 영향을 미치지 않음
	// 내 위치에서 다음 값을 구하기 때문에 초기화가 필요함
	dp[1][1] = maze[1][1];
	for (i = 1; i <= N; i++) {
		for (j = 1; j <= M; j++) {
			// 다음 경로로 이동했을 때 최대값 구하기
			dp[i + 1][j] = max(dp[i + 1][j], dp[i][j] + maze[i + 1][j]);
			
			dp[i][j + 1] = max(dp[i][j + 1], dp[i][j] + maze[i][j + 1]);
			
			dp[i + 1][j + 1] = max(dp[i + 1][j + 1], dp[i][j] + maze[i + 1][j + 1]);			
		}
	}

	cout << dp[N][M] << "\n";
}
