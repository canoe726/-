#include<iostream>
#include<algorithm>
#include<vector>
#include<cstring>
#include<string>
#include<queue>
#include<tuple>
#include<map>

using namespace std;

int board[100][100];
// (1,1) 에서 (N,N) 으로 가는 경로의 개수
// 경로의 개수가 2^63-1 보다 작음
long long dp[100][100];

int main() {
	int N;
	cin >> N;

	int i, j, k;
	for (i = 0; i < N; i++) {
		for (j = 0; j < N; j++) {
			cin >> board[i][j];
		}
	}

	// 처음 경우의 수 1개
	dp[0][0] = 1;
	for (i = 0; i < N; i++) {
		for (j = 0; j < N; j++) {
			// 초기값 제외
			if (i == 0 && j == 0) continue;

			// 왼쪽에서 오는경우
			// (i, k) -> (i, j) 으로 이동한 경우, j - k == board[i][k] 여야 한다.
			for (k = 0; k < j; k++) {
				if (j - k == board[i][k]) {
					dp[i][j] += dp[i][k];
				}
			}

			// 위쪽에서 오는경우
			// (k, j) -> (i, j) 으로 이동한 경우, i - k == board[k][j] 여야 한다.
			for (k = 0; k < i; k++) {
				if (i - k == board[k][j]) {
					dp[i][j] += dp[k][j];
				}
			}
		}
	}

	cout << dp[N - 1][N - 1] << "\n";
}
