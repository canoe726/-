#include<iostream>
#include<algorithm>
#include<vector>
#include<cmath>

using namespace std;

// 도시 순회의 모든 경우를 순열로 나타낼 수 있음
int city[11][11];

int main() {
	int N;
	cin >> N;

	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) {
			cin >> city[i][j];
		}
	}

	vector<int> path(N);
	for (int i = 0; i < N; i++) {
		path[i] = i;
	}

	int cost = 987654321;
	do {				// 경로 중간에 비용이 0 이 존재한다면 잘못된 경로임
		bool ok = true;
		int ret = 0;
		
		for (int i = 0; i < path.size() - 1; i++) {
			int s = path[i];
			int e = path[i + 1];

			if (city[s][e] == 0) ok = false;
			ret += city[s][e];
		}
		
		if (ok && city[path[N - 1]][path[0]] != 0) {
			ret += city[path[N - 1]][path[0]];
			cost = min(cost, ret);
		}
	} while (next_permutation(path.begin(), path.end()));

	cout << cost << "\n";
}