#include<iostream>
#include<string>
#include<climits>
#include<queue>

using namespace std;

int visited[10000] = { 0 };
int primenumber[10000] = { 0 };
int counts[10000] = { 0 };
int answer;

void find_primenumber(int size)
{
	int i, j;
	for (i = 2; i < size; i++)
	{
		primenumber[i] = 1;
	}

	for (i = 2; i < size; i++)
	{
		for (j = i * i; j < size; j += i)
		{
			primenumber[j] = 0;
		}
	}
}

void find_count(int from, int to, int count)
{
	queue<int> q;

	int i, j;

	q.push(from);
	while (!q.empty())
	{
		string num;
		num = to_string(q.front());
		q.pop();

		for (i = 0; i < 4; i++)
		{
			string temp = num;

			for (j = 0; j < 10; j++)
			{
				temp[i] = j + '0';

				int change = atoi(temp.c_str());
				if (change >= 1000 && primenumber[change])
				{
					if (!visited[change])
					{
						visited[change] = 1;
						counts[change] = counts[atoi(num.c_str())] + 1;
						q.push(change);
					}
				}
			}
		}
	}
}

int main()
{
	find_primenumber(10000);

	int T;
	cin >> T;

	int i, j;
	for (i = 0; i < T; i++)
	{
		answer = INT_MAX;
		for (j = 0; j < 10000; j++)
		{
			visited[j] = 0;
			counts[j] = 0;
		}

		int num1, num2;
		cin >> num1 >> num2;

		visited[num1] = 1;

		find_count(num1, num2, 0);

		cout << counts[num2] << "\n";
	}
}