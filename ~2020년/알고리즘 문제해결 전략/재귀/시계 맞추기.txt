#include<iostream>
#include<string>
#include<algorithm>

using namespace std;

// 4번 누르면 누르지 않은 것과 같음
// 총 4^10 가지 경우의 수 존재 : 1048576
int INF = 987654321;
int switch_clock[10][5] =
{
	{0,1,2,-1,-1},
	{3,7,9,11,-1},
	{4,10,14,15,-1},
	{0,4,5,6,7},
	{6,7,8,10,12},
	{0,2,14,15,-1},
	{3,14,15,-1,-1},
	{4,5,7,14,15},
	{1,2,3,4,5},
	{3,4,5,9,13},
};

void set_clock(int clock[], int s_idx)
{
	int i;
	for (i = 0; i < 5; i++)
	{
		if (switch_clock[s_idx][i] == -1) { return; }
		clock[switch_clock[s_idx][i]] += 3;
		if (clock[switch_clock[s_idx][i]] > 12) { clock[switch_clock[s_idx][i]] = 3; }
	}
}

int find_min_press(int clock[], int s_idx, int cnt)
{
	int i;
	if (s_idx == 10)
	{
		bool isOK = true;
		// 모두 12시를 향하는지 검사
		for (i = 0; i < 16; i++) { if (clock[i] != 12) { isOK = false; break; } }
		if (isOK) { return cnt; }
		return INF;
	}

	int ret = INF;
	for (i = 0; i < 4; i++)
	{
		// 가장 적은 횟수를 찾아야 함
		ret = min(ret, find_min_press(clock, s_idx + 1, cnt + i));
		set_clock(clock, s_idx);
	}
	return ret;
}

int main()
{
	int C;
	cin >> C;

	int i, j;
	for (i = 0; i < C; i++)
	{
		int clock[16];
		memset(clock, 0, sizeof(clock));

		for (j = 0; j < 16; j++) { cin >> clock[j]; }
		int res = find_min_press(clock, 0, 0);
		if (res == INF) { cout << -1 << "\n"; }
		else { cout << res << "\n"; }
	}
}