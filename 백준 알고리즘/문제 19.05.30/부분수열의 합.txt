#include<iostream>
#include<algorithm>
#include<queue>
#include<string>

using namespace std;

int nums[21] = { 0 };
int flag[21] = { 0 };
int answer = 0;

void subset1(int N, int depth, int S)
{
	if (N == depth)
	{
		int i, sum = 0, add = 0;
		for (i = 0; i < N; i++)
		{
			if (flag[i])
			{
				sum += nums[i];
				add = 1;
			}
		}
		
		if (S == sum && add == 1)
		{
			answer += 1;
		}

		return;
	}

	flag[depth] = 0;
	subset1(N, depth + 1, S);

	flag[depth] = 1;
	subset1(N, depth + 1, S);
}

// bit mask
void subset2(int N, int S)
{
	int pow = 1 << N;
	int i, j, sum, add = 0;
	for (i = 0; i < pow; i++)
	{
		sum = 0;
		for (j = 0; j < N; j++)
		{
			if (i & (1 << j))
			{
				sum += nums[j];
				add = 1;
			}
		}
		if (S == sum && add == 1)
		{
			answer += 1;
		}
	}
}

int main()
{
	int N, S;
	cin >> N >> S;
		
	int i;
	for (i = 0; i < N; i++)
	{
		cin >> nums[i];
	}

	//subset1(N, 0, S);
	subset2(N, S);

	cout << answer << endl;
}

