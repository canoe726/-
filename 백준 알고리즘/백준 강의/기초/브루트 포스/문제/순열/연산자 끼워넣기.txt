#include<iostream>
#include<algorithm>
#include<vector>

using namespace std;

int A[101];
// 0 : +, 1 : -, 2 : *, 3 : /
int operators[4];

int maxValue = -2100000000;
int minValue = 2100000000;

int calc(vector<int> c, int n) {
	int ret = A[0];

	int i;
	for (i = 1; i < n; i++) {
		if (c[i - 1] == 0) ret += A[i];
		if (c[i - 1] == 1) ret -= A[i];
		if (c[i - 1] == 2) ret *= A[i];
		if (c[i - 1] == 3) ret /= A[i];
	}

	return ret;
}

int main() {
	int N;
	cin >> N;

	int i, j;
	for (i = 0; i < N; i++) {
		cin >> A[i];
	}

	for (i = 0; i < 4; i++) {
		cin >> operators[i];
	}

	vector<int> combination;		// 연산자를 0~3 으로 매핑
	for (i = 0; i < 4; i++) {
		if (operators[i] > 0) {
			for (j = 0; j < operators[i]; j++) {
				combination.push_back(i);
			}
		}
	}
	sort(combination.begin(), combination.end());

	do {							// 모든 연산자 배열 경우의 수 계산
		int ret = calc(combination, N);
		if (maxValue < ret) maxValue = ret;
		if (minValue > ret) minValue = ret;

	} while (next_permutation(combination.begin(), combination.end()));

	cout << maxValue << "\n";
	cout << minValue << "\n";
}