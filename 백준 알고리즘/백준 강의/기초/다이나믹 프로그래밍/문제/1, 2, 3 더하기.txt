#include<iostream>
#include<cstring>

using namespace std;

int d[11];

int top_bottom(int n) {
	if (n <= 1) return 1;
	else if (n == 2) return 2;
	else {
		if (d[n] != -1) return d[n];
		return d[n] = top_bottom(n - 1) + top_bottom(n - 2) + top_bottom(n - 3);
	}
}

int bottom_up(int n) {
	d[0] = 1;
	d[1] = 1;
	d[2] = 2;

	for (int i = 3; i <= n; i++) {
		d[i] = (d[i - 1] + d[i - 2] + d[i - 3]);
	}

	return d[n];
}

int main() {
	memset(d, -1, sizeof(d));

	int T;
	cin >> T;

	for (int i = 0; i < T; i++) {
		int n;
		cin >> n;

		cout << top_bottom(n) << endl;
		// cout << bottom_up(n) << endl;
	}
}