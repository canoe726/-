#include<iostream>
#include<cstring>
#include<algorithm>

using namespace std;

int document[101];

int Answer = 0;

int main()
{
	int T;
	cin >> T;

	for (int i = 0; i < T; i++)
	{
		fill_n(document, 101, 0);

		int len = 0;

		int N, M;
		cin >> N;
		cin >> M;

		int front = 0;
		int rear = N;

		for (int j = 0; j < N; j++)
		{
			int su;
			cin >> su;

			document[j] = su;			
			len += 1;
		}

		Answer = M;
		
		while (1)
		{
			int large = 0;
			int exist = 1;

			if (front == N) { break; }

			for (int k = 1; k < (rear - front); k++)
			{
				if (document[front] < document[front + k])
				{
					large = 1;
					break;
				}
			}

			if ( large == 1 )
			{
				int temp = document[front];

				if (Answer < front) { exist = 0; }

				for (int k = front; k < rear - 1; k++)
				{
					document[k] = document[k + 1];
				}
				document[rear - 1] = temp;

				if (exist == 1)
				{
					if (Answer == 0) { Answer = (N - 1); }
					else
					{
						if (Answer == front)
						{
							Answer = (N - 1);
						}
						else
						{
							Answer = (Answer - 1);
						}
					}
				}
			}
			
			if (large == 0) { front += 1; }
		}

		cout << Answer+1 << '\n';
	}

	return 0;
}

