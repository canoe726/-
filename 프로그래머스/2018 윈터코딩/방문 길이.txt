#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>
#include <string.h>

// 지나온 길은 1
// 남 북 동 서
int field[11][11][4] = { 0 };

int char_len(char *dirs)
{
	int length = 0;
	char *p = dirs;
	char *i;
	for (i = p; *i != '\0'; i++)
	{
		length++;
	}
	return length;
}

int solution(char* dirs)
{
	int answer = 0;

	// 시작 지점
	int cur_y = 5;
	int cur_x = 5;
	//field[cur_y][cur_x] = 1;

	int i;
	for (i = 0; i < char_len(dirs); i++)
	{
		// 남 북 동 서
		if (dirs[i] == 'D')
		{
			// 범위 조사
			if ((cur_y + 1 > -1) && (cur_y + 1 < 11))
			{
				// 처음 가는 길인지를 검사
				if (field[cur_y][cur_x][0] + field[cur_y + 1][cur_x][1] != 2)
				{
					answer++;
				}
				field[cur_y][cur_x][0] = 1;
				cur_y = cur_y + 1;
				field[cur_y][cur_x][1] = 1;
			}
		}
		else if (dirs[i] == 'U')
		{
			if ((cur_y - 1 > -1) && (cur_y - 1 < 11))
			{
				if (field[cur_y][cur_x][1] + field[cur_y - 1][cur_x][0] != 2)
				{
					answer++;
				}
				field[cur_y][cur_x][1] = 1;
				cur_y = cur_y - 1;
				field[cur_y][cur_x][0] = 1;
			}
		}
		else if (dirs[i] == 'R')
		{
			if ((cur_x + 1 > -1) && (cur_x + 1 < 11))
			{
				if (field[cur_y][cur_x][2] + field[cur_y][cur_x + 1][3] != 2)
				{
					answer++;
				}
				field[cur_y][cur_x][2] = 1;
				cur_x = cur_x + 1;
				field[cur_y][cur_x][3] = 1;
			}
		}
		else if (dirs[i] == 'L')
		{
			if ((cur_x - 1 > -1) && (cur_x - 1 < 11))
			{
				if (field[cur_y][cur_x][3] + field[cur_y][cur_x - 1][2] != 2)
				{
					answer++;
				}
				field[cur_y][cur_x][3] = 1;
				cur_x = cur_x - 1;
				field[cur_y][cur_x][2] = 1;
			}
		}
		
	}
	return answer;
}

#pragma warning(disable:4996)

int main()
{
	char dirs[501] = { '\0' };
	scanf("%s", dirs);

	printf("%d\n", solution(dirs));
}