#include<iostream>
#include<algorithm>
#include<vector>
#include<string>

using namespace std;

int n;
int map[100][100];
int cache[100][100];

bool one_leg_jump_1(int y, int x)
{
	if (y == n - 1 && x == n - 1) { return 1; }
	if (y >= n || x >= n) { return 0; }

	return one_leg_jump_1(y + map[y][x], x) || one_leg_jump_1(y, x + map[y][x]);
}

int one_leg_jump_2(int y, int x)
{
	if (y == n - 1 && x == n - 1) { return 1; }
	if (y >= n || x >= n) { return 0; }

	int &ret = cache[y][x];
	if (ret != -1) { return ret; }
	
	return ret = (one_leg_jump_2(y + map[y][x], x) || one_leg_jump_2(y, x + map[y][x]));
}

int main()
{
	int C;
	cin >> C;

	int i, j, k;
	for (i = 0; i < C; i++)
	{
		cin >> n;
		memset(map, 0, sizeof(map));
		memset(cache, -1, sizeof(cache));

		for (j = 0; j < n; j++)
		{
			for (k = 0; k < n; k++)
			{
				cin >> map[j][k];
			}
		}
		if (one_leg_jump_2(0, 0) == 1) { cout << "YES" << "\n"; }
		else { cout << "NO" << "\n"; }
	}
}

